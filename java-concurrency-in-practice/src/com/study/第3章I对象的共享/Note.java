package com.study.第3章I对象的共享;

public class Note {
    /**
     * 一、可见性
     * 1.为什么说对于一个变量，应该用唯一一个锁来做线程安全的设计？
     *      1）可以保证后面开发人员不会在选择锁上花时间--》提高维护性
     *      2）可以百分百保证线程间的同步代码块相互之间的可见性---P30
     *      考虑一种情况，如果12用A锁，34用B锁，那么实际上并不能保证1的操作能被3看见
     * 2.JVM在服务器中，会以server模式运行，在开发环境会以client模式运行
     *      1）两者区别：
     *      相比server模式，client模式会少一些代码重排和内存优化
     *      2）导致问题：
     *      因为在server端，多了代码重排和内存优化，会出现不可见问题，最终
     *      导致在开发环境能运行，而在server端不能得到正确的结果的情况发生
     * 3.volatile只能赋予变量可见性，并不能赋予变量变访问时的操作原子性
     * 4.原子性的理解
     *      根据需求，对复合操作进行定义，达到需求同时，满足线程安全，这种操作就具有
     *      原子性
     *
     * 二、发布与逸出
     * 5.发布的定义：使对象能够在当前作用域之外的代码中使用，称为发布
     * 6.逸出的定义：当某个不应该被发布的对象被发布时，称为逸出
     * 7.封装与逸出的交叉：
     *      封装使我们对程序的正确分析称为可能，让程序员通过封装设计使用对象的约束规则，
     *      来发布一个不被误用的对象
     * 8.当且仅当在构造方法返回之后，对象的状态才处于可以被预测和一致的状态。
     *
     * 三、线程封闭
     * 9.线程封闭技术：通过代码设计，在不进行同步的前提下，令某个对象同一时间只运行于单个线程，实现
     * 线程安全，这种技术叫做线程封闭技术
     * 1.封闭技术总览
     *      1）ad-hoc线程封闭
     *      2）栈封闭（参考spring-mvc设计）
     */
}
